easyblock = 'CMakeMake'

name = 'Caffe'
version = '1.0'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://github.com/CMU-Perceptual-Computing-Lab/caffe'
description = """
	Caffe: a fast open framework for deep learning. http://caffe.berkeleyvision.org/
	"""

toolchain = {'name': 'fosscuda', 'version': '2018a'}
toolchainopts = {'optarch': False, 'pic': True}

sources = ['%(version)s.tar.gz']
source_urls = ['https://github.com/CMU-Perceptual-Computing-Lab/caffe/archive/']

builddependencies = [
    ('CMake', '3.12.1'),
]

dependencies = [
    ('cuDNN', '7.1.4.18'),
    ('glog', '0.3.5'),
    ('gflags', '2.2.1'),
    ('OpenCV', '3.4.4', '-Python-%(pyver)s'),
    ('LMDB', '0.9.21'),
    ('LevelDB', '1.22'),
    ('snappy', '1.1.7'),
    ('protobuf', '3.6.1'),
    ('protobuf-python', '3.6.1', '-Python-%(pyver)s'),
    ('HDF5', '1.10.1'),
    ('Boost', '1.67.0'),
    ('Python', '2.7.14'),
    ('scikit-image', '0.14.1', '-Python-%(pyver)s'),
    ('MATLAB', '2018a', '', SYSTEM),
]

#preconfigopts = 'cp Makefile.config.example Makefile.config && ' 

cuda_compute_capabilities = ['3.5', '3.7', '5.0', '5.2', '5.3', '6.0', '6.1', '6.2', '7.0']
capabilities = [''.join(x.split('.')) for x in cuda_compute_capabilities]
cuda_arch = ';'.join(['-gencode arch=compute_%s,code=\"sm_%s,compute_%s\"' % (x, x, x) for x in capabilities])
print(cuda_arch)

configopts = '-DBLAS=open '
configopts += '-DUSE_CUDNN=ON '
configopts += '-DCPU_ONLY=OFF '
configopts += '-DBUILD_matlab=OFF '
configopts += '-DBUILD_python=OFF '
configopts += '-DBUILD_docs=OFF '
configopts += '-DCUDA_ARCH_NAME=Manual '
configopts += '-DCUDA_ARCH_BIN="30 35 50 52 60 61" '

#modextrapaths = {
#    'PYTHONPATH': ['python'],
#    'MATLABPATH': ['matlab'],
#}

sanity_check_paths = {
    'files': ['bin/caffe'] +
             ['lib/%s' % x for x in ['libcaffe.so','libproto.a']] +
#             ['python/caffe/_caffe.so'] +
             ['include/caffe/proto/caffe.pb.h'],
    'dirs': [],
}

#sanity_check_commands = [('python', "-c 'import caffe'")]

moduleclass = 'devel'
