easyblock = 'PythonBundle'

name = 'ColabFold'
version = '1.3.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/sokrypton/ColabFold'
description = "Making Protein folding accessible to all!"

toolchain = {'name': 'foss', 'version': '2021a'}

builddependencies = [
    # CMake/Doxygen/SWIG are required for building OpenMM
    ('CMake', '3.20.1'),
    ('Doxygen', '1.9.1'),
    ('Bazel', '3.7.2'),
    ('SWIG', '4.0.2'),
]

dependencies = [
    ('Python', '3.9.5'),
    ('CUDA', '11.3.1', '', True),
    ('SciPy-bundle', '2021.05'),
    ('PyYAML', '5.4.1'),
    ('matplotlib', '3.4.2'),
    ('TensorFlow', '2.6.0', versionsuffix),
    ('Biopython', '1.79'),
    ('HH-suite', '3.3.0'),
    ('Kalign', '3.3.1'),
    ('jax', '0.3.9', versionsuffix),  # also provides absl-py
    ('UCX-CUDA', '1.10.0', versionsuffix),
    ('cuDNN', '8.2.1.32', versionsuffix, True),
]

local_openmm_preinstallopts = "export OPENMM_INCLUDE_PATH=%(installdir)s/include && "
local_openmm_preinstallopts += " export OPENMM_LIB_PATH=%(installdir)s/lib && "

# required to install OpenMM Python API;
# avoid that setup.py partially uninstalls existing OpenMM Python bindings...
local_openmm_installopts = " && cd python && sed -i 's/uninstall()/pass/g' setup.py && "
local_openmm_installopts += "python setup.py build && python setup.py install --prefix=%(installdir)s"

local_mmseqs_version = '2022-08-09' # date of the corresponding commit
local_mmseqs_commit = '67949d702dbfc6e5d54fdd0f14a9ab6740f11c32'

components = [
    ('vmtouch', '1.3.1', {
        'easyblock': 'ConfigureMake',
        'source_urls': ['https://github.com/hoytech/vmtouch/archive/'],
        'sources': [{'download_filename': 'v%(version)s.tar.gz', 'filename': SOURCE_TAR_GZ}],
        'checksums': ['d57b7b3ae1146c4516429ab7d6db6f2122401db814ddd9cdaad10980e9c8428c'],
        'skipsteps': 'configure',
        'start_dir': '%(name)s-%(version)s',
        'installopts': 'PREFIX=%(installdir)s',
    }),
    ('MMseqs2', '2022-08-09', {
        'easyblock': 'CMakeMake',
        'source_urls': ['https://github.com/soedinglab/MMseqs2/archive/'],
        'sources': ['%s.tar.gz' % local_mmseqs_commit],
        'checksums': ['51d6e41b27e923ecde805dcc026a3d0b5c67c5a1d162efc39f11a87d5e3c8a81'],
        'start_dir': 'MMseqs2-%s' % local_mmseqs_commit,
        'configopts': '-DVERSION_OVERRIDE="%%(version)s (commit %s)"' % local_mmseqs_commit,
    }),
    # for simtk
    ('OpenMM', '7.5.1', {
        'easyblock': 'CMakeMake',
        'source_urls': ['https://github.com/openmm/openmm/archive/'],
        'sources': [{'download_filename': '%(version)s.tar.gz', 'filename': SOURCE_TAR_GZ}],
        'patches': [{'name': 'OpenMM-%(version)s_AlphaFold.patch', 'sourcepath':'wrappers/python', 'alt_location': 'AlphaFold'}],
        'checksums': [
            'c88d6946468a2bde2619acb834f57b859b5e114a93093cf562165612e10f4ff7',  # OpenMM-7.5.1.tar.gz
            '1b109dfff3af5c6aa70690bca14618612953c68840a7e64f679db7ca33c1aff6',  # OpenMM-7.5.1_AlphaFold.patch
        ],
        'start_dir': 'openmm-%(version)s',
        'preinstallopts': local_openmm_preinstallopts,
        'installopts': local_openmm_installopts,
    }),
    ('colabfold', version, {
        'easyblock': 'PythonPackage',
        'source_urls': ['https://github.com/sokrypton/ColabFold/archive/refs/tags/'],
        'sources': ['v%(version)s.tar.gz'],
        'patches': ['ColabFold-1.3.0_use_envvar_for_data_dir.patch'],
        'checksums': [
            '97b7908ce0fc866fe0c204996bb9ead94e122078b8163ccee1f9af3c921cc14c',  # v1.3.0.tar.gz
            'b22a7e28779dbdad07873dde80f9a01de4ccf0cf05a5d73091aa273666e3149a',  # ColabFold-1.3.0_use_envvar_for_data_dir.patch
        ],
        'start_dir': 'ColabFold-%(version)s',
        'use_pip': True,
        'use_pip_extras': 'alphafold',
        'preinstallopts': 'sed -i "s/1.2.0/1.3.0/g" pyproject.toml && sed -i "s/tensorflow-cpu/tensorflow/g" pyproject.toml && ' 
    }),
]

use_pip = True

exts_list = [
    ('PDBFixer', '1.7', {
        'source_urls': ['https://github.com/openmm/pdbfixer/archive/refs/tags/'],
        'sources': [{'download_filename': 'v%(version)s.tar.gz', 'filename': '%(name)s-%(version)s.tar.gz'}],
        'checksums': ['a0bef3c52a7bbe69a6aea5333f51f3e7d158339be5829aed19b0344bd66d4eea'],
    }),
    ('dm-haiku', '0.0.4', {
        'modulename': 'haiku',
        'source_urls': ['https://github.com/deepmind/dm-haiku/archive/refs/tags/'],
        'sources': [{'download_filename': 'v%(version)s.tar.gz', 'filename': '%(name)s-%(version)s.tar.gz'}],
        'checksums': ['e9896d161938b53f869fde207f3f6fca496d09b2a47d21dd9b6b65e897ad6aab'],
    }),
    ('jmp', '0.0.2', {
        'preinstallopts': "touch requirements.txt && touch requirements-test.txt && ",
        'checksums': ['fdb5cec0d10aab4116c2770f24b2adf4f503fcfbb96ce8ef583e1879bdbf1b9b'],
    }),
    ('py3Dmol', '1.7.0', {
        'modulename': 'py3Dmol',
        'checksums': ['612c6f42251987c12fe0b932460963d6669ebc596ab77af6d697baa7ce421add'],
    }),
    ('immutabledict', '2.2.1', {
        'checksums': ['1ddb0edf1bb6c70d0197eb90ce1fe2b2d58502334f5fdfde72d7c633d723ec3a'],
    }),
    ('alphafold-colabfold', '2.1.14', {
        'modulename': 'alphafold',
        'preinstallopts': 'sed -i "s/tensorflow-cpu/tensorflow/g" setup.py && ',
        'checksums': ['66ac55dec55a6020216093d3a244b6b1ffdfff2c28251c36a315c5da94466f1f'],
    }),
    ('importlib_metadata', '4.8.3', {
        'checksums': ['766abffff765960fcc18003801f7044eb6755ffae4521c8e8ce8e83b9c9b0668'],
    }),
    ('absl-py', '0.13.0', {
        'modulename': 'absl',
        'checksums': ['6953272383486044699fd0e9f00aad167a27e08ce19aae66c6c4b10e7e767793'],
    }),
    ('toolz', '0.11.2', {
        'checksums': ['6b312d5e15138552f1bda8a4e66c30e236c831b612b2bf0005f8a1df10a4bc33'],
    }),
    ('chex', '0.1.3', {
        'checksums': ['2cfa6ccd02addd6b113658d03bd5ce8a7b3bd24fa62e746a246073414ea1e103'],
    }),
    ('dm-tree', '0.1.7', {
        'modulename': 'tree',
        'checksums': ['30fec8aca5b92823c0e796a2f33b875b4dccd470b57e91e6c542405c5f77fd2a'],
    }),
    ('websocket-client', '1.3.3', {
        'modulename': 'websocket',
        'checksums': ['d58c5f284d6a9bf8379dab423259fe8f85b70d5fa5d2916d5791a84594b122b1'],
    }),
    ('docker', '5.0.3', {
        'checksums': ['d916a26b62970e7c2f554110ed6af04c7ccff8e9f81ad17d0d40c75637e227fb'],
    }),
    ('contextlib2', '21.6.0', {
        'checksums': ['ab1e2bfe1d01d968e1b7e8d9023bc51ef3509bba217bb730cee3827e1ee82869'],
    }),
    ('ml_collections', '0.1.1', {
        'preinstallopts': "touch requirements.txt && touch requirements-test.txt && ",
        'checksums': ['3fefcc72ec433aa1e5d32307a3e474bbb67f405be814ea52a2166bfc9dbe68cc'],
    }),
    ('matplotlib', '3.1.3', {
        'checksums': ['db3121f12fb9b99f105d1413aebaeb3d943f269f3d262b45586d12765866f0c6'],
    }),
    ('pandas', '1.3.3', {
        'checksums': ['272c8cb14aa9793eada6b1ebe81994616e647b5892a370c7135efb2924b701df'],
    }),
    ('charset-normalizer', '2.0.12', {
        'checksums': ['2857e29ff0d34db842cd7ca3230549d1a697f96ee6d3fb071cfa6c7393832597'],
    }),
    ('requests', '2.28.1', {
        'checksums': ['7c5599b102feddaa661c826c56ab4fee28bfd17f5abca1ebbe3e7f19d7c97983'],
    }),
    ('tqdm', '4.64.0', {
        'checksums': ['40be55d30e200777a307a7585aee69e4eabb46b4ec6a4b4a5f2d9f11e7d5408d'],
    }),
]

sanity_check_paths = {
    'files': ['bin/colabfold_batch', 'bin/pdbfixer', 'lib/libOpenMM.%s' % SHLIB_EXT,
              'lib/python%(pyshortver)s/site-packages/simtk/openmm/openmm.py'],
    'dirs': ['lib/python%(pyshortver)s/site-packages', 'examples'],
}

sanity_check_commands = [
    "pdbfixer --help",
    "python -m simtk.testInstallation",
    "python -c 'import colabfold'",
    "colabfold_batch --help",
    "colabfold_search --help",
    "colabfold_split_msas --help",
    "mmseqs --help | grep 'MMseqs2 Version: %s (commit %s)'" % (local_mmseqs_version, local_mmseqs_commit),
]

sanity_pip_check = True

modextrapaths = {
    'COLABFOLDDIR': '',
    'OPENMM_INCLUDE_PATH': 'include',
    'OPENMM_LIB_PATH': 'lib',
}

modextravars = {
    #'TF_FORCE_UNIFIED_MEMORY': '1',
    'TF_FORCE_UNIFIED_MEMORY': '0',
    'OPENMM_RELAX': 'CUDA',  # unset or set to 'CPU' in order not to run the energy minimization on GPU; PR#189
    'XLA_PYTHON_CLIENT_MEM_FRACTION': '4.0',
    'MPLBACKEND': 'Agg',
    'COLABFOLD_DATA_DIR': '/data/public/colabfold/data-%(version)s',
    'XDG_CACHE_HOME': '',
}

moduleclass = 'bio'
