export EASYBUILD_ZIP_LOGS=bzip2
export EASYBUILD_RPATH=1
export EASYBUILD_MODULE_EXTENSIONS=1
export EASYBUILD_BUILDPATH=/dev/shm/${USER}
export EASYBUILD_SOURCEPATH=${HOME}/sources
export EASYBUILD_ROBOT_PATHS=${HOME}/easybuild/cit-hpc-easybuild:${HOME}/easybuild/easybuild-easyconfigs/easybuild/easyconfigs
export EASYBUILD_ACCEPT_EULA_FOR=CUDA,Intel-oneAPI
export EASYBUILD_INCLUDE_EASYBLOCKS=${HOME}/easybuild/cit-hpc-easybuild/easyblocks/*/*.py

if [ -z ${SW_STACK_REPO} ] || [ -z ${SW_STACK_ARCH} ] || [ -z ${SW_STACK_OS} ] || [ -z ${SW_STACK_VERSION} ]; then
  echo "Error: the variables \$SW_STACK_REPO, \$SW_STACK_OS, \$SW_STACK_VERSION, and \$SW_STACK_ARCH have to be set!"
  exit 1
fi

if [ ! -z ${SW_GENERIC} ]; then
  SW_STACK_ARCH=$(uname -m)/generic
fi
if [ -z ${SW_STACK_RESTRICTED} ]; then
  export EASYBUILD_INSTALLPATH=/cvmfs/${SW_STACK_REPO}/versions/${SW_STACK_VERSION}/${SW_STACK_OS}/${SW_STACK_ARCH}
else
  export EASYBUILD_INSTALLPATH=/apps/versions/${SW_STACK_VERSION}/${SW_STACK_OS}/${SW_STACK_ARCH}
fi

# CUDA capabilities for different nodes
if [ "${SW_STACK_ARCH}" = "x86_64/intel/skylake_avx512" ]; then
  # Nvidia V100
  export EASYBUILD_CUDA_COMPUTE_CAPABILITIES=7.0
elif [ "${SW_STACK_ARCH}" = "x86_64/intel/icelake" ]; then
  # Nvidia A100
  export EASYBUILD_CUDA_COMPUTE_CAPABILITIES=8.0
else
  # Pick the oldest one as default
  export EASYBUILD_CUDA_COMPUTE_CAPABILITIES=7.0
fi

export EASYBUILD_HOOKS=${HOME}/easybuild/cit-hpc-easybuild/hooks/habrok.py
# make sure hooks are available, so we can produce a clear error message
if [ ! -f $EASYBUILD_HOOKS ]; then
  echo "Error: $EASYBUILD_HOOKS does not exist!"
  exit 1
fi
